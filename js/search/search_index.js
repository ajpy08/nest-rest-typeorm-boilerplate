var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.505,1,2.035]],["body/controllers/AppController.html",[0,2.571,1,2.91,2,1.623,3,0.394,4,0.394,5,0.254,6,2.852,7,1.221,8,3.682,9,0.394,10,1.28,11,2.206,12,5.422,13,1.483,14,0.034,15,3.424,16,3.282,17,5.422,18,3.921,19,2.852,20,3.282,21,3.282,22,0.613,23,3.424,24,1.529,25,4.517,26,3.921,27,2.152,28,0.649,29,0.811,30,3.781,31,3.682,32,1.623,33,2.852,34,1.247,35,1.145,36,2.939,37,2.852,38,2.91,39,3.424,40,0.394,41,0.091,42,1.359,43,1.483,44,1.783,45,2.195,46,1.623,47,1.052,48,2.91,49,2.476,50,0.886,51,3.424,52,0.023,53,0.023]],["title/modules/AppModule.html",[54,1.26,55,2.035]],["body/modules/AppModule.html",[1,2.656,2,1.647,3,0.477,4,0.27,5,0.258,14,0.034,28,0.683,29,0.555,36,2.672,37,1.951,40,0.27,41,0.062,44,2.388,47,0.719,50,0.899,52,0.018,53,0.018,54,1.379,55,3.732,56,1.11,57,1.505,58,1.951,59,1.951,60,1.951,61,2.952,62,2.952,63,2.952,64,2,65,1.348,66,1.22,67,2.342,68,2.227,69,3.541,70,3.819,71,3.572,72,1.348,73,2.342,74,1.951,75,1.951,76,1.693,77,3.475,78,1.348,79,3.452,80,2.342,81,1.501,82,2.938,83,2.342,84,2.342,85,3.475,86,1.951,87,1.951,88,2.342,89,2.342,90,2.342,91,2.342,92,2.342,93,2.342,94,2.342,95,1.951,96,2.342,97,2.513,98,2.342,99,1.951,100,2.342,101,1.951,102,2.342,103,1.951,104,2.342,105,1.951,106,2.342,107,1.951,108,2.342,109,1.951,110,2.342,111,1.951,112,2.342,113,1.951,114,2.342,115,2.342,116,2.996,117,3.452,118,1.951,119,2.342,120,2.342,121,2.342,122,1.693,123,2.342,124,0.27,125,2.342,126,2.342,127,2.342,128,2.342,129,2.342,130,0.853,131,2.342,132,0.929,133,2.342,134,1.22,135,2.342,136,1.501,137,2.342,138,2.342,139,2.342,140,3.475,141,2.895,142,2.342,143,2.173,144,1.693,145,2.342,146,2.342,147,4.143,148,4.584,149,3.475,150,3.475,151,0.622,152,3.475,153,1.819,154,3.475,155,3.475,156,2.342,157,3.475,158,2.342,159,2.342,160,2.342,161,2.342,162,2.342,163,2.342,164,2.342,165,2.342,166,2.342,167,2.342,168,2.342,169,2.342,170,2.342]],["title/injectables/AppService.html",[36,1.654,171,0.821]],["body/injectables/AppService.html",[3,0.401,4,0.401,5,0.259,7,0.994,9,0.401,10,1.295,14,0.034,22,0.822,24,1.54,25,4.728,26,4.104,28,0.628,29,0.825,33,4.279,34,1.269,35,1.165,36,2.392,40,0.401,41,0.093,42,2.167,43,1.51,44,2.844,46,1.652,47,1.07,50,0.901,52,0.024,53,0.024,81,2.234,82,2.944,116,2.52,124,0.401,144,3.321,171,1.188,172,1.652,173,2.903,174,3.826,175,5.46,176,3.485,177,6.03,178,3.485,179,1.07,180,0.687,181,0.983,182,3.485,183,3.485,184,3.485,185,1.815,186,3.485,187,3.485,188,3.485,189,2.52,190,3.485,191,2.903,192,2.52]],["title/controllers/AuthController.html",[0,1.505,193,2.035]],["body/controllers/AuthController.html",[0,2.045,2,1.19,3,0.289,4,0.289,5,0.186,7,1.31,9,0.289,10,1.031,11,2.278,13,1.584,14,0.034,18,2.644,19,3.046,20,3.427,22,0.655,24,1.031,27,1.734,28,0.64,29,0.595,31,3.925,32,1.19,34,0.914,35,0.839,38,2.765,40,0.289,41,0.067,42,1.451,43,2.053,44,1.905,46,1.734,48,3.371,49,2.644,50,0.946,52,0.019,53,0.019,124,0.421,151,0.655,179,1.123,180,0.721,181,1.031,185,1.905,193,2.344,194,2.091,195,2.091,196,2.51,197,3.643,198,4.023,199,3.948,200,2.51,201,2.899,202,2.51,203,4.739,204,4.739,205,3.657,206,4.739,207,4.739,208,2.51,209,4.739,210,3.046,211,2.644,212,3.046,213,2.104,214,3.026,215,3.038,216,2.51,217,2.899,218,2.51,219,4.739,220,2.51,221,2.51,222,1.815,223,2.51,224,2.091,225,2.091,226,1.726,227,1.609,228,2.624,229,2.091,230,2.091,231,2.51,232,2.091,233,2.51,234,2.51,235,2.091,236,2.091,237,2.51,238,2.51,239,1.584,240,2.344,241,2.51,242,3.657,243,2.51,244,2.51,245,2.51]],["title/modules/AuthModule.html",[54,1.26,61,1.827]],["body/modules/AuthModule.html",[2,2.018,3,0.358,4,0.358,5,0.231,11,1.348,14,0.034,28,0.701,29,0.737,40,0.358,41,0.083,50,0.805,52,0.022,53,0.022,54,1.689,56,1.475,57,1.844,61,3.532,64,2.449,65,1.79,66,1.62,68,2.728,69,3.077,70,4.041,71,3.343,72,1.79,76,2.25,78,1.79,116,2.25,117,2.592,151,0.557,193,3.109,226,2.053,227,1.994,228,3.197,229,2.592,246,2.592,247,2.592,248,2.592,249,3.532,250,3.111,251,3.545,252,3.111,253,2.25,254,3.111,255,1.994,256,1.844,257,3.111,258,1.994,259,1.62,260,3.111,261,3.111,262,2.592,263,3.111,264,3.111,265,1.79,266,3.111,267,3.111,268,2.592,269,3.111,270,4.256,271,3.111,272,1.79]],["title/injectables/AuthService.html",[171,0.821,228,1.654]],["body/injectables/AuthService.html",[3,0.272,4,0.272,5,0.175,7,0.757,9,0.272,10,0.986,11,2.229,14,0.034,22,0.824,24,1.298,27,2.44,28,0.629,29,0.56,34,0.86,35,0.79,40,0.272,41,0.063,42,1.827,43,2.229,44,2.68,46,2.44,50,0.905,52,0.018,53,0.018,71,3.413,72,1.359,124,0.566,130,1.676,132,1.388,134,1.822,151,1.065,153,0.937,171,0.905,172,1.12,179,1.279,180,0.969,181,1.174,185,2.68,197,2.529,198,1.708,201,2.828,213,2.012,214,2.396,215,1.514,222,2.529,225,1.968,226,2.034,227,1.514,228,1.822,230,1.968,239,1.023,240,1.514,253,1.708,259,1.23,265,2.649,272,2.396,273,1.968,274,1.515,275,4.603,276,4.164,277,4.164,278,2.362,279,5.468,280,3.497,281,2.362,282,2.362,283,2.913,284,2.529,285,3.954,286,2.913,287,2.362,288,2.362,289,3.497,290,2.529,291,2.913,292,3.497,293,2.913,294,3.469,295,2.913,296,2.913,297,3.469,298,3.497,299,2.362,300,1.968,301,1.822,302,2.012,303,2.012,304,2.362,305,2.362,306,2.362,307,2.362,308,3.497,309,2.362,310,1.708,311,1.708,312,1.968,313,2.362]],["title/injectables/CaslFactory.html",[171,0.821,314,1.505]],["body/injectables/CaslFactory.html",[3,0.381,4,0.381,5,0.245,9,0.381,10,1.251,14,0.034,22,0.592,24,0.933,28,0.616,29,0.783,34,1.204,35,1.483,40,0.511,41,0.088,50,0.856,52,0.023,53,0.023,124,0.616,130,1.204,151,1.067,153,1.312,171,1.147,172,1.568,179,1.016,180,0.652,181,0.933,239,1.433,259,1.723,314,2.103,315,2.392,316,4.436,317,4.436,318,3.307,319,2.88,320,4.436,321,4.436,322,4.436,323,3.695,324,2.755,325,2.392,326,2.755,327,3.307,328,4.436,329,3.695,330,3.307,331,3.208,332,3.307,333,3.307,334,3.307,335,4.436,336,1.903,337,3.307,338,2.755,339,4.436,340,3.307,341,2.552,342,2.392,343,3.307,344,4.169,345,3.307,346,3.695,347,4.436,348,3.307,349,3.307,350,3.307,351,3.307,352,3.307,353,3.307,354,1.568,355,2.755,356,3.307,357,3.307,358,3.307]],["title/modules/CaslModule.html",[54,1.26,62,1.827]],["body/modules/CaslModule.html",[3,0.487,4,0.487,5,0.314,14,0.033,28,0.598,29,1.002,40,0.487,41,0.112,52,0.027,53,0.027,54,2.062,56,2.006,57,2.251,62,3.572,64,2.99,65,2.435,66,2.204,68,3.331,251,4.329,314,3.042,359,3.525,360,3.525,361,3.525,362,4.231,363,2.712]],["title/classes/DeleteUserPolicyHandler.html",[41,0.084,364,1.827]],["body/classes/DeleteUserPolicyHandler.html",[3,0.447,4,0.447,5,0.288,9,0.447,10,1.389,14,0.033,22,0.695,24,1.095,28,0.622,34,1.413,35,1.298,40,0.567,41,0.103,50,1.004,52,0.025,53,0.025,124,0.622,151,0.882,179,1.192,180,0.766,181,1.095,259,2.022,319,2.834,325,2.807,336,3.452,354,1.84,363,2.488,364,2.834,365,3.156,366,2.488,367,3.156,368,3.273,369,4.102,370,4.506,371,3.882,372,2.234,373,4.102,374,3.561,375,2.234,376,2.807,377,2.234,378,3.234]],["title/interfaces/IPolicyHandler.html",[368,1.827,372,1.827]],["body/interfaces/IPolicyHandler.html",[3,0.448,4,0.448,5,0.289,9,0.448,10,1.391,14,0.033,22,0.697,24,1.098,28,0.623,34,1.417,35,1.302,40,0.568,41,0.103,50,1.007,52,0.025,53,0.025,124,0.623,151,0.883,179,1.196,180,0.768,181,1.098,259,2.028,319,2.839,325,2.815,336,3.454,363,2.495,364,2.24,365,3.162,366,2.495,367,2.495,368,3.277,369,4.11,370,4.512,372,2.24,373,4.512,374,3.567,375,2.24,376,2.815,377,2.24,378,3.243,379,3.893,380,3.893]],["title/injectables/JwtAuthGuard.html",[171,0.821,381,2.035]],["body/injectables/JwtAuthGuard.html",[3,0.422,4,0.422,5,0.272,7,0.793,9,0.422,10,1.338,14,0.034,22,0.85,24,1.033,28,0.641,29,0.868,40,0.422,41,0.097,42,1.454,45,2.348,50,1.227,52,0.024,53,0.024,124,0.546,143,1.736,171,1.227,172,1.736,179,1.457,180,0.936,181,1.338,197,3.431,232,3.051,239,1.587,255,2.348,265,2.73,381,3.041,382,4.384,383,3.051,384,3.041,385,3.952,386,3.051,387,4.921,388,3.663,389,3.952,390,4.637,391,3.663,392,3.051,393,2.348,394,3.663,395,2.649,396,3.051,397,3.663,398,3.051,399,3.952,400,3.663,401,3.051,402,3.663,403,3.663]],["title/injectables/JwtStrategy.html",[171,0.821,249,1.827]],["body/injectables/JwtStrategy.html",[3,0.359,4,0.359,5,0.231,7,0.675,9,0.359,10,1.202,11,2.104,14,0.034,22,0.763,24,1.202,27,2.302,28,0.649,29,0.739,40,0.359,41,0.129,42,2.072,43,2.104,46,2.021,52,0.022,53,0.022,71,3.77,72,1.794,124,0.491,151,0.558,171,1.103,172,1.478,179,1.309,180,0.841,181,1.202,185,2.22,210,4.046,226,2.141,227,1.999,235,2.598,239,1.351,249,2.453,255,1.999,259,1.624,265,3.004,268,2.598,284,3.082,285,3.952,296,2.598,301,1.624,396,2.598,398,2.598,404,2.598,405,4.856,406,3.118,407,3.118,408,3.118,409,5.22,410,3.118,411,4.262,412,4.262,413,3.551,414,3.082,415,3.118,416,3.118,417,2.598,418,3.118,419,3.118,420,3.118,421,3.118,422,2.255,423,3.118,424,3.118,425,3.118,426,3.118,427,4.262,428,4.262,429,4.262]],["title/classes/LoginDto.html",[41,0.084,201,1.827]],["body/classes/LoginDto.html",[3,0.438,4,0.438,5,0.282,7,0.824,9,0.438,13,2.106,14,0.034,22,0.871,28,0.56,32,1.804,40,0.438,41,0.15,47,1.735,52,0.025,53,0.025,124,0.56,130,2.125,132,2.316,143,2.305,198,3.516,201,2.798,215,3.117,274,2.106,354,1.804,430,3.171,431,3.516,432,3.171,433,3.806,434,4.083,435,2.752,436,3.806,437,3.875,438,3.516,439,3.875,440,2.752,441,2.44,442,3.117,443,2.752]],["title/classes/PasswordTransformer.html",[41,0.084,444,2.035]],["body/classes/PasswordTransformer.html",[3,0.415,4,0.415,5,0.267,7,1.13,9,0.415,10,1.324,14,0.034,22,0.841,24,1.324,28,0.54,40,0.415,41,0.139,43,2.034,47,1.955,50,1.215,52,0.024,53,0.024,124,0.54,132,1.863,179,1.442,180,0.926,181,1.324,354,1.709,367,3.01,444,3.01,445,3.003,446,3.395,447,5.222,448,4.695,449,3.605,450,4.695,451,4.609,452,4.99,453,4.695,454,3.605,455,4.695,456,3.912,457,1.877,458,3.003,459,3.605]],["title/classes/PatchUserDto.html",[41,0.084,460,1.827]],["body/classes/PatchUserDto.html",[3,0.38,4,0.38,5,0.245,7,0.714,9,0.38,13,2.314,14,0.034,22,0.957,28,0.51,32,1.564,40,0.38,41,0.142,47,1.83,52,0.023,53,0.023,124,0.615,130,2.029,132,2.212,143,1.564,151,0.793,180,1.099,214,2.548,274,1.918,303,3.207,354,1.564,431,2.386,434,4.308,435,2.386,437,4.03,438,3.202,439,4.149,440,2.386,441,2.115,442,2.115,443,2.386,460,2.548,461,4.643,462,2.749,463,3.689,464,3.299,465,3.299,466,3.299,467,3.689,468,3.689,469,3.299,470,3.299,471,3.299,472,3.299,473,3.689,474,2.749,475,2.749]],["title/guards/PoliciesGuard.html",[384,2.035,476,1.827]],["body/guards/PoliciesGuard.html",[3,0.368,4,0.368,5,0.237,9,0.368,10,1.223,11,2.132,14,0.034,22,0.881,24,1.223,27,2.056,28,0.635,29,0.758,40,0.368,41,0.085,42,1.269,45,2.05,50,1.273,52,0.022,53,0.022,124,0.566,151,0.573,171,1.122,179,1.511,180,0.97,181,1.388,185,2.748,239,2.132,314,2.757,319,3.173,336,3.036,363,2.05,367,2.05,375,3.036,376,2.313,377,1.841,385,4.395,386,2.665,387,4.737,389,3.613,390,4.395,392,2.665,393,2.05,401,2.665,476,2.496,477,3.199,478,2.665,479,4.337,480,3.199,481,3.199,482,4.337,483,3.199,484,4.337,485,3.136,486,2.665,487,2.665,488,3.199,489,3.199,490,3.199,491,3.199,492,3.199,493,3.199,494,3.199,495,2.313,496,3.199,497,3.199]],["title/classes/RegisterDto.html",[41,0.084,217,1.827]],["body/classes/RegisterDto.html",[3,0.375,4,0.375,5,0.242,7,0.706,9,0.375,13,2.303,14,0.034,22,0.952,28,0.506,32,1.545,40,0.375,41,0.141,47,1.825,52,0.023,53,0.023,124,0.612,130,2.021,132,2.203,143,2.521,180,1.095,199,3.66,215,2.816,217,2.528,274,1.903,303,3.194,354,1.545,431,3.845,432,2.716,434,4.296,435,2.357,437,4.013,438,3.177,439,4.134,440,2.357,441,2.09,442,3.408,443,2.357,467,3.66,468,3.66,473,3.66,474,2.716,475,2.716,498,2.716,499,3.26,500,3.26,501,3.26,502,3.26,503,3.26,504,3.26]],["title/entities/User.html",[151,0.568,505,1.827]],["body/entities/User.html",[3,0.303,4,0.303,5,0.195,7,0.569,9,0.303,13,2.385,14,0.034,22,0.986,28,0.558,40,0.303,41,0.129,47,1.789,52,0.019,53,0.019,124,0.634,130,1.869,132,2.037,134,1.971,136,1.686,143,1.794,151,0.919,153,1.044,180,1.086,213,1.514,256,2.099,258,1.686,272,2.177,274,1.639,301,2.308,302,2.953,303,2.953,341,2.177,422,1.903,444,3.105,446,3.204,451,3.152,457,1.37,505,3.075,506,2.192,507,3.982,508,5.253,509,2.631,510,2.631,511,3.152,512,3.691,513,2.631,514,2.736,515,2.631,516,2.631,517,3.783,518,3.783,519,2.192,520,3.783,521,2.631,522,2.631,523,3.783,524,3.783,525,3.783,526,3.783,527,2.631,528,3.783,529,2.631,530,3.152,531,2.736,532,3.152,533,3.152,534,2.631,535,2.631,536,3.783,537,3.783,538,2.631,539,2.631]],["title/entities/UserRoles.html",[256,1.375,505,1.827]],["body/entities/UserRoles.html",[3,0.358,4,0.358,5,0.231,7,0.673,8,3.077,9,0.358,13,2.101,14,0.034,22,0.869,28,0.558,34,1.133,35,1.04,40,0.358,41,0.129,52,0.022,53,0.022,124,0.6,136,1.994,151,1.09,236,4.345,256,1.844,272,2.449,274,1.844,286,3.545,301,2.526,302,2.449,326,4.55,341,3.322,342,2.25,346,3.545,457,1.62,505,3.245,508,4.896,512,4.041,514,3.077,519,2.592,530,3.545,531,3.077,532,3.545,533,3.545,540,4.345,541,2.592,542,3.111,543,3.111,544,5.215,545,3.343,546,3.111,547,4.256,548,4.256,549,3.077,550,3.077,551,4.256,552,3.111,553,4.256,554,4.256,555,4.256,556,3.111,557,4.256,558,1.994]],["title/controllers/UsersController.html",[0,1.505,559,2.035]],["body/controllers/UsersController.html",[0,1.772,2,0.938,3,0.228,4,0.228,5,0.147,7,1.256,9,0.228,10,0.862,11,2.302,13,1.822,14,0.034,16,3.476,18,4.109,20,3.476,21,3.476,22,0.753,24,1.46,27,2.573,28,0.612,29,0.469,30,2.548,31,3.624,32,0.938,34,0.72,35,0.662,40,0.228,41,0.053,42,0.785,43,1.97,45,1.268,46,0.938,47,1.539,48,3.081,50,1.088,52,0.016,53,0.016,124,0.43,130,2.012,134,1.593,151,1.128,153,0.785,179,1.292,180,0.829,181,1.186,195,1.648,213,1.76,214,2.151,222,1.431,224,1.648,226,1.531,239,0.857,240,1.268,290,2.211,310,1.431,338,1.648,364,1.76,377,1.138,460,2.42,463,4.005,476,1.138,487,1.648,550,3.288,558,1.268,559,1.96,560,1.648,561,1.978,562,3.738,563,3.058,564,3.058,565,3.058,566,1.978,567,1.978,568,1.978,569,3.738,570,1.978,571,3.058,572,3.058,573,2.548,574,1.978,575,3.058,576,1.978,577,4.206,578,2.548,579,3.058,580,2.548,581,3.504,582,4.005,583,1.978,584,1.978,585,4.807,586,1.978,587,3.058,588,2.211,589,1.978,590,1.978,591,1.978,592,2.548,593,2.548,594,2.548,595,1.978,596,1.648,597,1.431,598,1.978,599,1.648,600,1.978,601,1.648,602,1.648,603,1.648,604,1.978,605,1.978,606,1.978,607,1.978,608,3.738,609,1.978,610,1.978,611,1.648,612,1.648,613,1.978,614,1.978,615,1.978,616,1.978,617,1.978,618,1.978,619,1.978]],["title/modules/UsersModule.html",[54,1.26,63,1.827]],["body/modules/UsersModule.html",[2,2.23,3,0.416,4,0.416,5,0.268,14,0.034,28,0.713,29,0.856,40,0.416,41,0.096,52,0.024,53,0.024,54,1.867,56,1.713,57,2.037,63,3.497,64,2.707,65,2.08,66,1.882,68,3.015,69,2.614,76,2.614,78,2.08,151,0.842,226,2.143,256,2.037,258,2.317,262,3.011,314,2.791,381,3.015,393,2.317,476,2.707,558,2.317,559,3.352,599,3.011,603,3.011,620,3.614,621,3.614,622,3.614,623,4.703,624,3.614,625,3.614,626,3.614,627,3.614,628,3.614,629,3.614]],["title/injectables/UsersService.html",[171,0.821,226,1.156]],["body/injectables/UsersService.html",[3,0.187,4,0.187,5,0.12,7,0.566,9,0.187,10,0.737,11,2.16,14,0.034,16,1.172,21,1.172,22,0.831,24,1.504,26,1.172,27,2.716,28,0.589,29,0.384,34,0.59,35,0.542,40,0.187,41,0.043,42,1.494,43,2.16,44,1.361,46,1.239,47,1.728,49,1.889,50,1.142,52,0.013,53,0.013,78,0.933,124,0.534,130,2.144,132,1.978,134,1.961,151,1.097,153,1.494,171,0.676,172,0.768,179,1.426,180,0.952,181,1.309,185,1.361,211,2.722,213,1.503,214,2.779,217,2.376,226,0.951,239,1.788,240,2.413,256,1.422,258,1.039,272,2.166,290,1.889,291,1.35,301,1.71,302,1.889,310,2.373,311,1.889,312,1.35,331,1.172,341,0.933,456,2.177,457,0.844,458,2.177,460,2.376,507,1.889,511,1.35,514,1.889,531,1.172,545,1.039,549,1.889,550,3.356,558,1.039,573,2.177,581,3.676,582,4.442,588,1.889,592,3.136,593,2.177,594,2.734,596,1.35,601,1.35,602,1.35,612,2.177,630,1.35,631,2.613,632,2.613,633,1.621,634,4.986,635,3.282,636,1.621,637,3.282,638,2.613,639,1.621,640,2.613,641,2.613,642,1.621,643,2.613,644,2.613,645,1.621,646,2.613,647,1.621,648,4.413,649,2.613,650,1.621,651,2.613,652,1.621,653,2.613,654,2.613,655,1.621,656,1.621,657,1.621,658,1.621,659,1.621,660,1.621,661,1.621,662,1.621,663,1.621,664,1.621,665,1.621,666,1.621,667,1.621,668,1.621,669,1.621,670,1.621,671,1.621,672,1.621,673,1.621,674,1.621,675,1.621,676,2.177,677,1.35,678,1.621,679,1.621,680,1.621,681,1.621,682,1.621,683,1.621,684,1.621,685,1.621,686,1.621,687,1.621,688,1.35,689,1.621,690,1.621,691,1.621,692,2.177,693,1.621,694,1.621,695,1.621,696,1.621,697,1.621,698,1.621,699,1.621,700,1.621,701,1.172,702,1.621]],["title/coverage.html",[703,3.595]],["body/coverage.html",[0,2.183,1,1.809,5,0.209,6,2.351,14,0.033,36,1.47,38,1.809,41,0.14,52,0.02,53,0.02,124,0.325,151,0.712,153,1.12,171,1.415,173,2.351,192,2.04,193,1.809,194,2.351,201,1.624,217,1.624,226,1.027,228,1.47,249,1.624,256,1.222,273,2.351,314,1.338,315,2.04,364,1.624,365,2.549,366,2.549,368,1.624,372,1.624,381,1.809,382,2.351,383,2.351,384,1.809,395,2.04,404,2.351,430,2.351,444,1.809,445,2.351,460,1.624,461,2.351,462,2.351,476,1.624,478,2.351,485,2.04,495,2.04,498,2.351,505,2.288,506,2.351,540,2.351,541,2.351,559,1.809,560,2.351,597,2.04,630,2.351,703,2.351,704,2.821,705,2.821,706,2.351,707,5.103,708,3.313,709,6.163,710,5.979,711,6.225,712,2.821,713,5.271,714,2.351,715,3.313,716,2.351,717,5,718,2.821,719,2.821,720,3.313,721,4.605,722,3.313,723,3.313,724,2.821,725,2.351,726,2.876,727,2.351,728,3.812,729,2.351,730,2.351,731,5.469,732,2.351,733,2.351,734,2.351,735,2.821,736,2.821,737,2.351]],["title/dependencies.html",[57,1.652,738,2.216]],["body/dependencies.html",[5,0.249,14,0.034,29,0.795,32,1.591,41,0.119,52,0.023,53,0.023,57,1.454,72,1.931,74,2.796,75,2.796,78,1.931,79,2.796,81,2.151,82,3.232,86,2.796,87,2.796,253,2.427,255,2.151,265,1.931,297,2.796,324,2.796,393,2.151,417,2.796,441,2.151,446,2.427,457,1.748,507,2.427,739,3.356,740,5.981,741,3.356,742,4.479,743,3.356,744,3.356,745,3.356,746,3.356,747,3.356,748,3.356,749,3.356,750,3.356,751,3.356,752,4.479,753,3.732,754,3.356,755,3.356,756,3.356,757,3.356,758,3.356,759,3.356,760,3.356,761,3.356,762,3.356,763,3.356,764,5.38,765,3.356,766,3.356,767,2.796,768,3.356,769,3.356,770,3.356,771,3.356,772,3.356,773,3.356,774,3.356,775,3.356,776,3.356,777,3.356,778,3.356,779,3.356,780,3.356,781,3.356,782,3.356,783,3.356,784,3.356,785,3.356,786,3.356,787,3.356,788,3.356,789,3.356,790,3.356,791,3.356,792,3.356,793,3.356,794,3.356]],["title/miscellaneous/functions.html",[795,1.386,796,3.177]],["body/miscellaneous/functions.html",[9,0.566,14,0.029,52,0.029,53,0.029,728,3.556,729,4.994,795,2.561,796,4.097,797,4.097]],["title/index.html",[9,0.306,798,2.66,799,2.216]],["body/index.html",[5,0.232,7,0.534,8,2.879,14,0.032,35,1.046,47,0.464,48,0.969,52,0.013,53,0.013,54,1.58,57,1.355,66,2.074,81,2.316,82,1.582,95,1.259,97,2.263,99,1.259,101,1.259,103,1.259,105,1.259,107,1.259,109,1.259,111,1.259,113,1.259,118,1.259,122,3.09,124,0.284,130,0.55,132,0.98,134,2.723,141,2.607,144,2.263,153,0.6,174,2.607,180,0.298,181,0.426,189,3.705,192,1.785,211,1.785,212,1.259,283,1.259,284,1.785,285,1.093,293,1.259,294,2.056,295,1.259,300,2.056,311,2.879,331,2.879,344,1.259,355,1.259,413,2.056,414,1.093,442,2.316,457,2.449,486,1.259,545,2.552,549,2.263,580,1.259,611,3.009,676,1.259,677,1.259,688,1.259,692,1.259,707,2.056,726,2.879,737,1.259,767,2.056,799,1.259,800,2.468,801,1.511,802,2.468,803,3.129,804,1.511,805,1.511,806,1.511,807,2.468,808,1.511,809,2.468,810,1.511,811,1.511,812,3.129,813,1.511,814,2.468,815,3.981,816,4.272,817,3.612,818,4.508,819,3.129,820,2.468,821,2.468,822,3.129,823,1.511,824,4.508,825,1.511,826,2.468,827,1.511,828,1.511,829,4.272,830,1.511,831,1.511,832,1.511,833,1.511,834,3.612,835,2.468,836,5.4,837,3.612,838,3.612,839,1.511,840,2.468,841,1.511,842,1.511,843,1.511,844,4.508,845,2.468,846,2.468,847,2.468,848,3.129,849,2.468,850,1.511,851,1.511,852,1.511,853,1.511,854,1.511,855,5.004,856,3.612,857,1.511,858,1.511,859,1.511,860,1.511,861,2.468,862,1.511,863,1.511,864,1.511,865,1.511,866,1.511,867,1.511,868,2.468,869,1.511,870,1.511,871,3.129,872,3.129,873,4.702,874,1.511,875,3.612,876,1.511,877,1.511,878,3.129,879,1.511,880,1.511,881,1.511,882,1.511,883,2.468,884,1.511,885,4.702,886,1.511,887,1.511,888,1.511,889,1.511,890,1.511,891,2.468,892,1.511,893,1.511,894,1.511,895,1.511,896,1.511,897,1.511,898,1.511,899,1.511,900,3.612,901,2.468,902,1.511,903,1.511,904,2.468,905,1.511,906,1.511,907,1.511,908,1.511,909,1.511,910,1.511,911,1.511,912,1.511,913,1.511,914,2.468,915,1.511,916,1.511,917,1.511,918,1.511,919,2.468,920,1.511,921,1.511,922,1.511,923,1.511,924,3.612,925,2.468,926,2.468,927,1.511,928,1.511,929,1.511,930,1.511,931,1.259,932,1.511,933,1.511,934,2.468,935,1.511,936,1.511,937,1.511,938,2.468,939,1.511,940,1.511,941,1.511,942,3.129,943,3.129,944,1.511,945,1.511,946,1.511,947,2.468,948,2.468,949,1.511,950,1.511,951,1.511,952,1.511,953,2.468,954,1.511,955,1.511,956,1.511,957,1.511,958,1.511,959,2.468,960,1.511,961,1.511,962,1.511,963,1.511,964,1.511,965,2.468,966,1.511,967,2.468,968,1.511,969,1.511,970,1.511,971,1.511,972,1.511,973,1.511,974,1.511,975,1.511,976,1.511,977,2.468,978,3.612,979,1.511,980,1.511,981,1.511,982,3.129,983,3.129,984,2.468,985,1.511,986,1.511,987,1.511,988,1.511,989,1.511,990,1.511,991,1.511,992,1.511,993,1.511,994,1.511,995,1.511,996,1.511,997,1.511,998,1.511,999,1.511,1000,1.511,1001,3.129,1002,2.468,1003,1.511,1004,3.129,1005,2.468,1006,2.468,1007,2.468,1008,2.468,1009,1.511,1010,2.468,1011,2.468,1012,2.468,1013,2.468,1014,1.511,1015,1.511,1016,1.511,1017,2.056,1018,2.468,1019,1.511,1020,1.511,1021,1.511,1022,1.511,1023,1.511,1024,1.511,1025,1.511,1026,1.511,1027,1.511,1028,1.511,1029,1.511,1030,1.511,1031,1.511,1032,1.511,1033,1.511,1034,1.511,1035,1.511,1036,1.511,1037,1.511,1038,1.511,1039,1.511,1040,1.511,1041,1.511,1042,1.511,1043,1.511,1044,1.511,1045,1.511,1046,1.511,1047,1.511,1048,1.259,1049,1.511,1050,1.511,1051,1.511,1052,1.511,1053,1.511,1054,1.511,1055,1.511,1056,1.259,1057,1.259,1058,1.511,1059,1.259]],["title/modules.html",[56,2.046]],["body/modules.html",[14,0.028,52,0.028,53,0.028,55,3.011,56,2.227,61,2.703,62,2.703,63,2.703,753,5.061,1048,5.061,1060,6.075,1061,6.075]],["title/overview.html",[1062,3.595]],["body/overview.html",[2,1.723,14,0.033,36,2.73,52,0.024,53,0.024,55,3.976,56,1.723,57,2.045,58,3.027,59,3.027,60,3.027,61,3.595,62,3.392,63,3.453,64,2.716,65,2.091,66,1.892,136,2.329,172,1.723,226,2.021,228,3.126,246,3.027,247,3.027,248,3.027,249,3.453,314,2.884,354,1.723,359,3.027,360,3.027,361,3.027,372,2.091,384,2.329,701,3.413,1062,3.027,1063,3.633,1064,3.633,1065,3.633,1066,3.633,1067,3.633]],["title/properties.html",[274,1.652,738,2.216]],["body/properties.html",[14,0.032,52,0.029,53,0.029,274,2.107,1056,4.053,1057,4.053,1059,4.053,1068,4.053,1069,4.865,1070,4.865,1071,4.865]],["title/miscellaneous/typealiases.html",[795,1.386,1072,3.814]],["body/miscellaneous/typealiases.html",[9,0.528,14,0.031,52,0.028,53,0.028,124,0.528,315,3.317,319,2.639,323,3.821,329,4.545,336,3.14,365,2.94,366,3.733,368,2.639,374,4.212,375,3.14,495,3.317,795,2.389,1073,4.587,1074,5.456,1075,5.456]],["title/miscellaneous/variables.html",[795,1.386,1076,3.177]],["body/miscellaneous/variables.html",[7,0.884,9,0.337,14,0.034,38,2.618,47,1.7,52,0.021,53,0.021,97,2.953,122,2.119,124,0.686,143,1.936,151,0.957,153,1.621,180,0.578,189,4.003,191,2.441,256,1.769,301,2.448,302,1.686,303,1.686,341,2.35,342,2.953,375,1.686,377,2.35,395,2.953,399,2.441,414,2.953,422,2.119,452,5.133,485,2.953,545,3.95,578,2.441,588,2.119,597,2.953,701,3.676,706,2.441,708,4.235,714,2.441,715,2.441,716,3.402,720,2.441,722,2.441,723,3.916,725,2.441,726,3.676,727,2.441,728,2.119,730,3.402,732,3.402,733,3.402,734,3.402,795,1.526,797,4.235,931,2.441,1017,2.441,1068,2.441,1076,2.441,1077,4.084,1078,2.931,1079,2.931,1080,4.084,1081,2.931,1082,2.931,1083,4.084,1084,2.931,1085,2.931,1086,2.931,1087,4.084,1088,2.931,1089,2.931,1090,2.931,1091,2.931,1092,2.931]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1069,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":701,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.7.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["14.1.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["14.5.10",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["14d",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["16",{"_index":839,"title":{},"body":{"index.html":{}}}],["17.6.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1065,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["201",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["20m",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":920,"title":{},"body":{"index.html":{}}}],["255",{"_index":518,"title":{},"body":{"entities/User.html":{}}}],["3",{"_index":1064,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["365",{"_index":992,"title":{},"body":{"index.html":{}}}],["4",{"_index":1063,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":921,"title":{},"body":{"index.html":{}}}],["400",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["5",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["9.0.11",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["ability",{"_index":319,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(useractionsenum.delete",{"_index":378,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["abilitybuilder",{"_index":320,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["abilityclass",{"_index":321,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["abstraction",{"_index":1031,"title":{},"body":{"index.html":{}}}],["access",{"_index":346,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{}}}],["accessed",{"_index":893,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":946,"title":{},"body":{"index.html":{}}}],["account",{"_index":672,"title":{},"body":{"injectables/UsersService.html":{}}}],["acts",{"_index":1030,"title":{},"body":{"index.html":{}}}],["actual",{"_index":936,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":944,"title":{},"body":{"index.html":{}}}],["add(this.expiration",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["again",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["against",{"_index":926,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1073,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":918,"title":{},"body":{"index.html":{}}}],["angular",{"_index":812,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/flex",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":676,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["anvarov",{"_index":1071,"title":{},"body":{"properties.html":{}}}],["anything",{"_index":955,"title":{},"body":{"index.html":{}}}],["api",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/v1/docs",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":437,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":464,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(8",{"_index":470,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@matches(/^[a",{"_index":466,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty({required",{"_index":431,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiresponse",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apis",{"_index":1023,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":604,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"entities/UserRoles.html":{},"index.html":{}}}],["app.controller",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app](https://github.com/gothinkster/realworld",{"_index":1047,"title":{},"body":{"index.html":{}}}],["app_env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app_guard",{"_index":623,"title":{},"body":{"modules/UsersModule.html":{}}}],["appability",{"_index":336,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["applications",{"_index":809,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1050,"title":{},"body":{"index.html":{}}}],["apps/.../app.controller.test.ts",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.controller.test.ts",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.service.test.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../casl.factory.ts",{"_index":1074,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../check",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../policy",{"_index":1075,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../public.decorator.ts",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app.controller.test.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app.controller.ts:29",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app.service.ts",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app.service.ts:11",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app.service.ts:24",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/auth/auth.controller.test.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.controller.ts",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.controller.ts:37",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.controller.ts:51",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.module.ts",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/auth/auth.service.test.ts",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.service.ts",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.service.ts:21",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:41",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:68",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/dto/login.dto.ts",{"_index":430,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:16",{"_index":436,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:26",{"_index":433,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts",{"_index":498,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:22",{"_index":500,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:32",{"_index":504,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:42",{"_index":502,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:52",{"_index":503,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/jwt",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:13",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:35",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/public.decorator.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/casl.factory.ts",{"_index":315,"title":{},"body":{"injectables/CaslFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/casl/casl.factory.ts:21",{"_index":318,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["apps/api/src/casl/casl.module.ts",{"_index":362,"title":{},"body":{"modules/CaslModule.html":{}}}],["apps/api/src/casl/check",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/policies.guard.ts",{"_index":478,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["apps/api/src/casl/policies.guard.ts:12",{"_index":481,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:27",{"_index":483,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:9",{"_index":480,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policy",{"_index":365,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/users/dto/patch",{"_index":461,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["apps/api/src/users/password.transformer.ts",{"_index":445,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["apps/api/src/users/password.transformer.ts:12",{"_index":454,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["apps/api/src/users/password.transformer.ts:20",{"_index":449,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["apps/api/src/users/user",{"_index":540,"title":{},"body":{"entities/UserRoles.html":{},"coverage.html":{}}}],["apps/api/src/users/user.entity.ts",{"_index":506,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/api/src/users/user.entity.ts:18",{"_index":513,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:24",{"_index":535,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:30",{"_index":515,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:36",{"_index":509,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:42",{"_index":510,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:48",{"_index":529,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:60",{"_index":522,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/users.controller.ts",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/api/src/users/users.controller.ts:41",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:53",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:71",{"_index":591,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:85",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.module.ts",{"_index":622,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/users/users.service.ts",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/api/src/users/users.service.ts:108",{"_index":645,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:131",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:22",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:40",{"_index":647,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:49",{"_index":650,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:59",{"_index":652,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:76",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice.name",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["apt",{"_index":847,"title":{},"body":{"index.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":625,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth.guard.ts",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":388,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":391,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/register.dto",{"_index":656,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/jwt",{"_index":624,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/public.decorator",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":193,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["authenticating",{"_index":925,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["authentication/authorization",{"_index":830,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":394,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":397,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1059,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":228,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":898,"title":{},"body":{"index.html":{}}}],["await",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":828,"title":{},"body":{"index.html":{}}}],["bad",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":594,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserRoles.html":{}}}],["bearer",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["before",{"_index":525,"title":{},"body":{"entities/User.html":{}}}],["behind",{"_index":909,"title":{},"body":{"index.html":{}}}],["below",{"_index":865,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":941,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["beware",{"_index":547,"title":{},"body":{"entities/UserRoles.html":{}}}],["body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["boilerplate",{"_index":824,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":373,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["bootstrap",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":834,"title":{},"body":{"index.html":{}}}],["branch",{"_index":947,"title":{},"body":{"index.html":{}}}],["branches",{"_index":1039,"title":{},"body":{"index.html":{}}}],["brew",{"_index":845,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1061,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":753,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":339,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["building",{"_index":804,"title":{},"body":{"index.html":{}}}],["built",{"_index":892,"title":{},"body":{"index.html":{}}}],["can(useractionsenum.manage",{"_index":343,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.read",{"_index":348,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.update",{"_index":349,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["canactivate",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["canactivate(context",{"_index":389,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["capability",{"_index":979,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":555,"title":{},"body":{"entities/UserRoles.html":{}}}],["casl",{"_index":328,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["casl.factory",{"_index":363,"title":{},"body":{"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":324,"title":{},"body":{"injectables/CaslFactory.html":{},"dependencies.html":{}}}],["casl/casl.factory",{"_index":626,"title":{},"body":{"modules/UsersModule.html":{}}}],["casl/casl.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["casl/check",{"_index":598,"title":{},"body":{"controllers/UsersController.html":{}}}],["casl/policies.guard",{"_index":599,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["casl/policy",{"_index":600,"title":{},"body":{"controllers/UsersController.html":{}}}],["caslfactory",{"_index":314,"title":{"injectables/CaslFactory.html":{}},"body":{"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["caslmodule",{"_index":62,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["cert.pem",{"_index":990,"title":{},"body":{"index.html":{}}}],["certificate",{"_index":978,"title":{},"body":{"index.html":{}}}],["certs",{"_index":981,"title":{},"body":{"index.html":{}}}],["change",{"_index":956,"title":{},"body":{"index.html":{}}}],["check",{"_index":486,"title":{},"body":{"guards/PoliciesGuard.html":{},"index.html":{}}}],["check_policies_key",{"_index":485,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":597,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies(new",{"_index":617,"title":{},"body":{"controllers/UsersController.html":{}}}],["checks",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["choco",{"_index":846,"title":{},"body":{"index.html":{}}}],["choice",{"_index":949,"title":{},"body":{"index.html":{}}}],["choose",{"_index":675,"title":{},"body":{"injectables/UsersService.html":{}}}],["choosing",{"_index":817,"title":{},"body":{"index.html":{}}}],["class",{"_index":41,"title":{"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":354,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"overview.html":{}}}],["clone",{"_index":868,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":359,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":361,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":360,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":620,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":621,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1016,"title":{},"body":{"index.html":{}}}],["column",{"_index":508,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["column({name",{"_index":516,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":543,"title":{},"body":{"entities/UserRoles.html":{}}}],["column({unique",{"_index":534,"title":{},"body":{"entities/User.html":{}}}],["comes",{"_index":829,"title":{},"body":{"index.html":{}}}],["coming",{"_index":337,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["command",{"_index":878,"title":{},"body":{"index.html":{}}}],["completed",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["completed'})@apiresponse({status",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["compose",{"_index":861,"title":{},"body":{"index.html":{}}}],["config",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["config.get('app_env",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('app_env",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_database",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_type",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_username",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('webtoken_encryption_key",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('webtoken_expiration_time",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":816,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":1037,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":888,"title":{},"body":{"index.html":{}}}],["connection",{"_index":923,"title":{},"body":{"index.html":{}}}],["connections",{"_index":935,"title":{},"body":{"index.html":{}}}],["const",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(logger",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor(userrepository",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["container",{"_index":904,"title":{},"body":{"index.html":{}}}],["contents",{"_index":813,"title":{},"body":{"index.html":{}}}],["context",{"_index":392,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.getclass",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":490,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["control",{"_index":852,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('v1/auth",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('v1/users",{"_index":605,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["corresponding",{"_index":957,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":703,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":876,"title":{},"body":{"index.html":{}}}],["create",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(payload",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":549,"title":{},"body":{"entities/UserRoles.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["createforuser",{"_index":316,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["createforuser(user",{"_index":317,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["createquerybuilder('users",{"_index":664,"title":{},"body":{"injectables/UsersService.html":{}}}],["creates",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["createtoken",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":327,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["crud",{"_index":831,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":456,"title":{},"body":{"classes/PasswordTransformer.html":{},"injectables/UsersService.html":{}}}],["crypto.createhmac('sha256",{"_index":458,"title":{},"body":{"classes/PasswordTransformer.html":{},"injectables/UsersService.html":{}}}],["current",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":674,"title":{},"body":{"injectables/UsersService.html":{}}}],["d",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["daily",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["data",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["databases",{"_index":1033,"title":{},"body":{"index.html":{}}}],["date%.log",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["datepattern",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["days",{"_index":991,"title":{},"body":{"index.html":{}}}],["db_database",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_host",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_password",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_port",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_type",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_username",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dd",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{}}}],["dedicated",{"_index":1025,"title":{},"body":{"index.html":{}}}],["default",{"_index":545,"title":{},"body":{"entities/UserRoles.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmeta",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":550,"title":{},"body":{"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete(':username",{"_index":615,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':username')@useguards(policiesguard)@checkpolicies(new",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(username",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleted",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted.affected",{"_index":700,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserbyusername",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserbyusername(username",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserpolicyhandler",{"_index":364,"title":{"classes/DeleteUserPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deleteuserpolicyhandler())@apiresponse({status",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["demand",{"_index":1005,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":908,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":849,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":815,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1021,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":859,"title":{},"body":{"index.html":{}}}],["detached",{"_index":905,"title":{},"body":{"index.html":{}}}],["details",{"_index":355,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["detection#use",{"_index":353,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["detectsubjecttype",{"_index":356,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["determines",{"_index":913,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1055,"title":{},"body":{"index.html":{}}}],["development",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["different",{"_index":934,"title":{},"body":{"index.html":{}}}],["directory",{"_index":902,"title":{},"body":{"index.html":{}}}],["docker",{"_index":836,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1004,"title":{},"body":{"index.html":{}}}],["docs/api",{"_index":1009,"title":{},"body":{"index.html":{}}}],["docs/ui",{"_index":1015,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"index.html":{}}}],["download",{"_index":872,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":857,"title":{},"body":{"index.html":{}}}],["downloading",{"_index":841,"title":{},"body":{"index.html":{}}}],["dto",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["dto/login.dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/patch",{"_index":601,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/register.dto",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["dynamic",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":592,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["edit(payload",{"_index":644,"title":{},"body":{"injectables/UsersService.html":{}}}],["efficient",{"_index":805,"title":{},"body":{"index.html":{}}}],["email",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["employed",{"_index":1043,"title":{},"body":{"index.html":{}}}],["employing",{"_index":995,"title":{},"body":{"index.html":{}}}],["employs",{"_index":523,"title":{},"body":{"entities/User.html":{}}}],["empty",{"_index":928,"title":{},"body":{"index.html":{}}}],["enable",{"_index":969,"title":{},"body":{"index.html":{}}}],["encrypt/decrypt",{"_index":916,"title":{},"body":{"index.html":{}}}],["end",{"_index":1011,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":931,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"overview.html":{}}}],["entity",{"_index":505,"title":{"entities/User.html":{},"entities/UserRoles.html":{}},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":544,"title":{},"body":{"entities/UserRoles.html":{}}}],["env",{"_index":875,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":877,"title":{},"body":{"index.html":{}}}],["environment",{"_index":726,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["everything",{"_index":347,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["example",{"_index":1046,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":536,"title":{},"body":{"entities/User.html":{}}}],["exec",{"_index":1000,"title":{},"body":{"index.html":{}}}],["execpolicyhandler",{"_index":479,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":482,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execute",{"_index":900,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":390,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["exist",{"_index":697,"title":{},"body":{"injectables/UsersService.html":{}}}],["existing",{"_index":880,"title":{},"body":{"index.html":{}}}],["exists",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["exp",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationformatted",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expiresin",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicitly",{"_index":933,"title":{},"body":{"index.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{}}}],["exposed",{"_index":886,"title":{},"body":{"index.html":{}}}],["express",{"_index":943,"title":{},"body":{"index.html":{}}}],["extends",{"_index":396,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extensive",{"_index":1036,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":322,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["failed",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["false})@exclude",{"_index":521,"title":{},"body":{"entities/User.html":{}}}],["fastify",{"_index":767,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastify/helmet",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["fastify/rate",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["feat",{"_index":1041,"title":{},"body":{"index.html":{}}}],["feat/http2",{"_index":976,"title":{},"body":{"index.html":{}}}],["feature",{"_index":963,"title":{},"body":{"index.html":{}}}],["features",{"_index":832,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":648,"title":{},"body":{"injectables/UsersService.html":{}}}],["field",{"_index":434,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["fields",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["files",{"_index":1012,"title":{},"body":{"index.html":{}}}],["folder",{"_index":982,"title":{},"body":{"index.html":{}}}],["follow",{"_index":862,"title":{},"body":{"index.html":{}}}],["following",{"_index":901,"title":{},"body":{"index.html":{}}}],["format",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["format('lll",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":611,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["framework",{"_index":803,"title":{},"body":{"index.html":{}}}],["from(value",{"_index":448,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["front",{"_index":1010,"title":{},"body":{"index.html":{}}}],["fully",{"_index":1051,"title":{},"body":{"index.html":{}}}],["function",{"_index":495,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":796,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1035,"title":{},"body":{"index.html":{}}}],["generate",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":983,"title":{},"body":{"index.html":{}}}],["get(':username",{"_index":607,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':username')@apiresponse({status",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":646,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername(username",{"_index":649,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass(username",{"_index":651,"title":{},"body":{"injectables/UsersService.html":{}}}],["getone",{"_index":670,"title":{},"body":{"injectables/UsersService.html":{}}}],["getstartingmessage",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":798,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(@request",{"_index":606,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(req",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(@param('username",{"_index":609,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(username",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":869,"title":{},"body":{"index.html":{}}}],["github",{"_index":1002,"title":{},"body":{"index.html":{}}}],["given",{"_index":588,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["grabs",{"_index":450,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["gravatar",{"_index":507,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["guard",{"_index":384,"title":{"guards/PoliciesGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":477,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["h2",{"_index":972,"title":{},"body":{"index.html":{}}}],["h2c",{"_index":974,"title":{},"body":{"index.html":{}}}],["handle",{"_index":369,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handle(ability",{"_index":370,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handler",{"_index":484,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":496,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":497,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":377,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["handlers.ts",{"_index":366,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["handlers.ts:17",{"_index":371,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{}}}],["handlers.ts:7",{"_index":380,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["hash",{"_index":451,"title":{},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{}}}],["hashed",{"_index":653,"title":{},"body":{"injectables/UsersService.html":{}}}],["heavily",{"_index":810,"title":{},"body":{"index.html":{}}}],["host",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["hosting",{"_index":1013,"title":{},"body":{"index.html":{}}}],["http",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{}}}],["http/2",{"_index":967,"title":{},"body":{"index.html":{}}}],["http2",{"_index":970,"title":{},"body":{"index.html":{}}}],["http://localhost:3333",{"_index":887,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":894,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":907,"title":{},"body":{"index.html":{}}}],["https",{"_index":971,"title":{},"body":{"index.html":{}}}],["https://casl.js.org/v5/en/guide/subject",{"_index":352,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["https://github.com/msanvarov/nest",{"_index":870,"title":{},"body":{"index.html":{}}}],["https://typeorm.io",{"_index":961,"title":{},"body":{"index.html":{}}}],["iat",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["igenericmessagebody",{"_index":596,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ijwtresponsebody",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["imessage",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["implements",{"_index":367,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infersubjects",{"_index":323,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{}}}],["inject(winston_module_provider",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":171,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":655,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":658,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userroles",{"_index":659,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":811,"title":{},"body":{"index.html":{}}}],["interface",{"_index":372,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":379,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["ipolicyhandler",{"_index":368,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["is_public_key",{"_index":395,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalphanumeric",{"_index":438,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isemail",{"_index":473,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":439,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["ispublic",{"_index":399,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":919,"title":{},"body":{"index.html":{}}}],["item",{"_index":357,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["item.constructor",{"_index":358,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["javascript",{"_index":842,"title":{},"body":{"index.html":{}}}],["joi",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default('3306",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(1800",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow('').default",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('localhost",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('mariadb",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('nest",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('root",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":381,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":249,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keepconnectionalive",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["key).digest('hex",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["key.pem",{"_index":989,"title":{},"body":{"index.html":{}}}],["keyout",{"_index":988,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":333,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["layer",{"_index":1032,"title":{},"body":{"index.html":{}}}],["layout",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":927,"title":{},"body":{"index.html":{}}}],["length",{"_index":517,"title":{},"body":{"entities/User.html":{}}}],["level",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["library",{"_index":959,"title":{},"body":{"index.html":{}}}],["license",{"_index":1056,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1058,"title":{},"body":{"index.html":{}}}],["limit",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["loads",{"_index":903,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":856,"title":{},"body":{"index.html":{}}}],["locally",{"_index":840,"title":{},"body":{"index.html":{}}}],["located",{"_index":980,"title":{},"body":{"index.html":{}}}],["location",{"_index":1027,"title":{},"body":{"index.html":{}}}],["logger",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["logging",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["login",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["login(@body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":201,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logs",{"_index":821,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["luckily",{"_index":968,"title":{},"body":{"index.html":{}}}],["made",{"_index":825,"title":{},"body":{"index.html":{}}}],["main",{"_index":1040,"title":{},"body":{"index.html":{}}}],["make",{"_index":837,"title":{},"body":{"index.html":{}}}],["makes",{"_index":975,"title":{},"body":{"index.html":{}}}],["manage",{"_index":330,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["manual",{"_index":866,"title":{},"body":{"index.html":{}}}],["many",{"_index":532,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["manytoone",{"_index":557,"title":{},"body":{"entities/UserRoles.html":{}}}],["manytoone(undefined",{"_index":552,"title":{},"body":{"entities/UserRoles.html":{}}}],["mapping",{"_index":1029,"title":{},"body":{"index.html":{}}}],["matches",{"_index":474,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":475,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["message",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":440,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(8",{"_index":443,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["mins",{"_index":922,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":795,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1057,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mm",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":883,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["modulemocker",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modulemocker(global",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["mongodb",{"_index":953,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":965,"title":{},"body":{"index.html":{}}}],["mssql",{"_index":954,"title":{},"body":{"index.html":{}}}],["mutated",{"_index":593,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mysql",{"_index":848,"title":{},"body":{"index.html":{}}}],["mysql/mariadb",{"_index":948,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["needed",{"_index":929,"title":{},"body":{"index.html":{}}}],["nest",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":393,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newkey",{"_index":986,"title":{},"body":{"index.html":{}}}],["nginx",{"_index":910,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":802,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":993,"title":{},"body":{"index.html":{}}}],["non",{"_index":835,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":654,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":873,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["number",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["nx",{"_index":823,"title":{},"body":{"index.html":{}}}],["object",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(payload).foreach((key",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["offers",{"_index":939,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":554,"title":{},"body":{"entities/UserRoles.html":{}}}],["one",{"_index":531,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["onetomany",{"_index":537,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":527,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":1017,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["open_api_current_version",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_description",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_name",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_root",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["openssl",{"_index":984,"title":{},"body":{"index.html":{}}}],["operation",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["operational",{"_index":860,"title":{},"body":{"index.html":{}}}],["operations",{"_index":938,"title":{},"body":{"index.html":{}}}],["optional",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["options",{"_index":914,"title":{},"body":{"index.html":{}}}],["os",{"_index":1054,"title":{},"body":{"index.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outlined",{"_index":864,"title":{},"body":{"index.html":{}}}],["over",{"_index":942,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1062,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":738,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":1003,"title":{},"body":{"index.html":{}}}],["panel",{"_index":853,"title":{},"body":{"index.html":{}}}],["param",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('username",{"_index":618,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["particular",{"_index":587,"title":{},"body":{"controllers/UsersController.html":{}}}],["passion",{"_index":1053,"title":{},"body":{"index.html":{}}}],["passport",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["password).digest('hex",{"_index":669,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.transformer",{"_index":538,"title":{},"body":{"entities/User.html":{}}}],["passwords",{"_index":524,"title":{},"body":{"entities/User.html":{}}}],["passwordtransformer",{"_index":444,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{},"coverage.html":{}}}],["patch",{"_index":463,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["patch()@apiresponse({status",{"_index":590,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":613,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(payload",{"_index":589,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":460,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["path",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["payload[key",{"_index":695,"title":{},"body":{"injectables/UsersService.html":{}}}],["perform",{"_index":937,"title":{},"body":{"index.html":{}}}],["performance",{"_index":940,"title":{},"body":{"index.html":{}}}],["permit",{"_index":548,"title":{},"body":{"entities/UserRoles.html":{}}}],["persistence",{"_index":833,"title":{},"body":{"index.html":{}}}],["pg",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["placeholders",{"_index":881,"title":{},"body":{"index.html":{}}}],["plaintext",{"_index":973,"title":{},"body":{"index.html":{}}}],["plaintoclass(user",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintoclass(userroles",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["policies.decorator",{"_index":487,"title":{},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["policies.decorator.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["policiesguard",{"_index":476,"title":{"guards/PoliciesGuard.html":{}},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["policy",{"_index":376,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["policyhandler",{"_index":375,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":374,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":488,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":492,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["port",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["ports",{"_index":891,"title":{},"body":{"index.html":{}}}],["post",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":952,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":814,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":512,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{}}}],["procedure",{"_index":863,"title":{},"body":{"index.html":{}}}],["produce",{"_index":1008,"title":{},"body":{"index.html":{}}}],["production",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"entities/UserRoles.html":{}}}],["profiles",{"_index":551,"title":{},"body":{"entities/UserRoles.html":{}}}],["profileservice",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["progress",{"_index":1038,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":801,"title":{},"body":{"index.html":{}}}],["project",{"_index":897,"title":{},"body":{"index.html":{}}}],["promise",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":274,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"properties.html":{}}}],["protocol",{"_index":683,"title":{},"body":{"injectables/UsersService.html":{}}}],["prototype",{"_index":827,"title":{},"body":{"index.html":{}}}],["provide",{"_index":628,"title":{},"body":{"modules/UsersModule.html":{}}}],["provided",{"_index":673,"title":{},"body":{"injectables/UsersService.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}}}],["provides",{"_index":1024,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":912,"title":{},"body":{"index.html":{}}}],["prs",{"_index":1049,"title":{},"body":{"index.html":{}}}],["public",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@apiresponse({status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@post('login')@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apiresponse({status",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["queried",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quickly",{"_index":826,"title":{},"body":{"index.html":{}}}],["r",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{}}}],["ran",{"_index":994,"title":{},"body":{"index.html":{}}}],["random",{"_index":917,"title":{},"body":{"index.html":{}}}],["react",{"_index":889,"title":{},"body":{"index.html":{}}}],["read",{"_index":344,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":1044,"title":{},"body":{"index.html":{}}}],["received",{"_index":608,"title":{},"body":{"controllers/UsersController.html":{}}}],["received'})@apiresponse({status",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["record",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["records",{"_index":702,"title":{},"body":{"injectables/UsersService.html":{}}}],["reflect",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":387,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["register",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{}}}],["register(@body",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":217,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registered",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerpayload",{"_index":612,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":1028,"title":{},"body":{"index.html":{}}}],["relations",{"_index":661,"title":{},"body":{"injectables/UsersService.html":{}}}],["relationship",{"_index":533,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["rely",{"_index":1052,"title":{},"body":{"index.html":{}}}],["remark",{"_index":331,"title":{},"body":{"injectables/CaslFactory.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["remove",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["removes",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["replace",{"_index":879,"title":{},"body":{"index.html":{}}}],["repo",{"_index":822,"title":{},"body":{"index.html":{}}}],["repository",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["represent",{"_index":530,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["represents",{"_index":334,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["req",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["req.user",{"_index":338,"title":{},"body":{"injectables/CaslFactory.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["request'})@apiresponse({status",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["required",{"_index":442,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["responses",{"_index":882,"title":{},"body":{"index.html":{}}}],["rest",{"_index":871,"title":{},"body":{"index.html":{}}}],["restful",{"_index":1022,"title":{},"body":{"index.html":{}}}],["results",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reverse",{"_index":911,"title":{},"body":{"index.html":{}}}],["rich",{"_index":964,"title":{},"body":{"index.html":{}}}],["role",{"_index":341,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["role.entity.ts",{"_index":541,"title":{},"body":{"entities/UserRoles.html":{},"coverage.html":{}}}],["role.entity.ts:16",{"_index":542,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.entity.ts:27",{"_index":546,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.entity.ts:35",{"_index":556,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.user",{"_index":528,"title":{},"body":{"entities/User.html":{}}}],["roles",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["rolesrepository",{"_index":657,"title":{},"body":{"injectables/UsersService.html":{}}}],["root",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["rootpath",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["rotate",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["route",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["rsa:4096",{"_index":987,"title":{},"body":{"index.html":{}}}],["run",{"_index":885,"title":{},"body":{"index.html":{}}}],["running",{"_index":997,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":843,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{}}}],["safe",{"_index":930,"title":{},"body":{"index.html":{}}}],["sal",{"_index":1070,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":806,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":520,"title":{},"body":{"entities/User.html":{}}}],["self",{"_index":977,"title":{},"body":{"index.html":{}}}],["served",{"_index":899,"title":{},"body":{"index.html":{}}}],["server",{"_index":807,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["set",{"_index":677,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["setmetadata(check_policies_key",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameter",{"_index":668,"title":{},"body":{"injectables/UsersService.html":{}}}],["setparameter('username",{"_index":667,"title":{},"body":{"injectables/UsersService.html":{}}}],["short",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":808,"title":{},"body":{"index.html":{}}}],["signed",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["signoptions",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["sits",{"_index":932,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["spdy",{"_index":996,"title":{},"body":{"index.html":{}}}],["special",{"_index":332,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["specification",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":951,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":960,"title":{},"body":{"index.html":{}}}],["stack",{"_index":850,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":858,"title":{},"body":{"index.html":{}}}],["start",{"_index":855,"title":{},"body":{"index.html":{}}}],["started",{"_index":799,"title":{"index.html":{}},"body":{"index.html":{}}}],["starter",{"_index":800,"title":{},"body":{"index.html":{}}}],["starter/api",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["startingmessage",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["statements",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["still",{"_index":945,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":335,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["subjects",{"_index":329,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["sudo",{"_index":678,"title":{},"body":{"injectables/UsersService.html":{}}}],["super",{"_index":398,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1048,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":962,"title":{},"body":{"index.html":{}}}],["supports",{"_index":950,"title":{},"body":{"index.html":{}}}],["sure",{"_index":838,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1060,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1018,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":698,"title":{},"body":{"injectables/UsersService.html":{}}}],["table",{"_index":737,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":1042,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":895,"title":{},"body":{"index.html":{}}}],["test",{"_index":1001,"title":{},"body":{"index.html":{}}}],["test@user.com",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":819,"title":{},"body":{"index.html":{}}}],["tests",{"_index":999,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":966,"title":{},"body":{"index.html":{}}}],["this.appservice.startingmessage",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslfactory.createforuser(user",{"_index":491,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.configservice.get('webtoken_expiration_time",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.execpolicyhandler(handler",{"_index":493,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.expiration",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":671,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyusername(username",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info('calling",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["this.reflector.get",{"_index":489,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":400,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.userrepository",{"_index":663,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create",{"_index":681,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete",{"_index":699,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":660,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":662,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save",{"_index":680,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":696,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrolesrepository.save(roles",{"_index":679,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(payload",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.delete(username",{"_index":619,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.edit(payload",{"_index":614,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusername(username",{"_index":610,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusernameandpass",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["to(value",{"_index":453,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["tokens",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["transform",{"_index":455,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["transformer",{"_index":446,"title":{},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["trigger",{"_index":854,"title":{},"body":{"index.html":{}}}],["true",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":435,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["true})@isemail()@isnotempty",{"_index":499,"title":{},"body":{"classes/RegisterDto.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":432,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["true})@matches(/^[a",{"_index":501,"title":{},"body":{"classes/RegisterDto.html":{}}}],["try",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1072,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":820,"title":{},"body":{"index.html":{}}}],["typedocs:api:start",{"_index":1007,"title":{},"body":{"index.html":{}}}],["typedocs:ui:start",{"_index":1014,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":494,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":457,"title":{},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleasyncoptions",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["typing",{"_index":1006,"title":{},"body":{"index.html":{}}}],["ui",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":519,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["unique",{"_index":539,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":998,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":906,"title":{},"body":{"index.html":{}}}],["update",{"_index":351,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["url",{"_index":511,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["url(payload.email",{"_index":682,"title":{},"body":{"injectables/UsersService.html":{}}}],["use",{"_index":924,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":629,"title":{},"body":{"modules/UsersModule.html":{}}}],["used",{"_index":1020,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":595,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(policiesguard",{"_index":616,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":151,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":602,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":462,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":465,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:30",{"_index":472,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:38",{"_index":469,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:46",{"_index":471,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.entity",{"_index":558,"title":{},"body":{"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.roles",{"_index":553,"title":{},"body":{"entities/UserRoles.html":{}}}],["user.roles.some",{"_index":340,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["user.username",{"_index":350,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["user[key",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["useractionsenum",{"_index":325,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["username",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["userrepository",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":256,"title":{"entities/UserRoles.html":{}},"body":{"modules/AuthModule.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrolesenum",{"_index":326,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{}}}],["userrolesenum.sudo",{"_index":342,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{},"miscellaneous/variables.html":{}}}],["userrolesrepository",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":627,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.password",{"_index":666,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":603,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/user.entity",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userscontroller",{"_index":559,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":226,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":884,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":915,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":514,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["v1/auth",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["v1/users",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["valid",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["valid('development",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validates",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":441,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":452,"title":{},"body":{"classes/PasswordTransformer.html":{},"miscellaneous/variables.html":{}}}],["value).digest('hex",{"_index":459,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["valuetransformer",{"_index":447,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["variable",{"_index":707,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1076,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1068,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":844,"title":{},"body":{"index.html":{}}}],["view",{"_index":1034,"title":{},"body":{"index.html":{}}}],["vue",{"_index":890,"title":{},"body":{"index.html":{}}}],["web",{"_index":818,"title":{},"body":{"index.html":{}}}],["webtoken_encryption_key",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webtoken_expiration_time",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["welcomemessage",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["where('users.username",{"_index":665,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["window",{"_index":896,"title":{},"body":{"index.html":{}}}],["winston",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["winston.format.json",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["winstonfilerotator",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forrootasync",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["without",{"_index":867,"title":{},"body":{"index.html":{}}}],["work",{"_index":1026,"title":{},"body":{"index.html":{}}}],["world",{"_index":1045,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":958,"title":{},"body":{"index.html":{}}}],["write",{"_index":345,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["writing",{"_index":526,"title":{},"body":{"entities/User.html":{}}}],["x509",{"_index":985,"title":{},"body":{"index.html":{}}}],["xampp",{"_index":851,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":874,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":468,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["za",{"_index":467,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["zippedarchive",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["zone.js",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStartingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStartingMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartingMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@ApiResponse({status: 200, description: 'Root Request Completed'})@ApiResponse({status: 400, description: 'Root Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app.controller.ts:29\n                \n            \n\n\n            \n                \n                    Returns a welcome message\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a welcome message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\n\nimport { IMessage } from '@starter/api-types';\n\nimport { AppService } from './app.service';\nimport { Public } from './auth/public.decorator';\n\n/**\n * App Controller\n */\n@ApiBearerAuth()\n@Controller()\nexport class AppController {\n  /**\n   * Constructor\n   * @param {AppService} appService app service\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returns a welcome message\n   * @returns {string} a welcome message\n   */\n  @Public()\n  @Get('/')\n  @ApiResponse({ status: 200, description: 'Root Request Completed' })\n  @ApiResponse({ status: 400, description: 'Root Request Failed' })\n  async getStartingMessage(): Promise {\n    return this.appService.startingMessage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule, TypeOrmModuleAsyncOptions } from '@nestjs/typeorm';\nimport * as joi from 'joi';\nimport { WinstonModule } from 'nest-winston';\nimport { join } from 'path';\nimport * as winston from 'winston';\nimport * as winstonFileRotator from 'winston-daily-rotate-file';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CaslModule } from './casl/casl.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: joi.object({\n        APP_ENV: joi\n          .string()\n          .valid('development', 'production')\n          .default('development'),\n        WEBTOKEN_ENCRYPTION_KEY: joi.string().required(),\n        WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n        DB_TYPE: joi.string().default('mariadb'),\n        DB_USERNAME: joi.string().default('root'),\n        DB_PASSWORD: joi.string().allow('').default(''),\n        DB_HOST: joi.string().default('localhost'),\n        DB_PORT: joi.number().default('3306'),\n        DB_DATABASE: joi.string().default('nest'),\n      }),\n    }),\n    ServeStaticModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        config.get('APP_ENV') === 'production'\n          ? [\n              {\n                rootPath: join(__dirname, '..', 'ui'),\n              },\n            ]\n          : [],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: configService.get('DB_TYPE'),\n          host: configService.get('DB_HOST'),\n          port: configService.get('DB_PORT'),\n          username: configService.get('DB_USERNAME'),\n          password: configService.get('DB_PASSWORD'),\n          database: configService.get('DB_DATABASE'),\n          entities: [__dirname + '/**/**.entity{.ts,.js}'],\n          synchronize: configService.get('APP_ENV') === 'development',\n          autoLoadEntities: true,\n          logging: true,\n          keepConnectionAlive: true,\n        } as TypeOrmModuleAsyncOptions;\n      },\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.get('APP_ENV') === 'development'\n          ? {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'user-service' },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'user-service' },\n              transports: [\n                new winston.transports.File({\n                  filename: 'logs/error.log',\n                  level: 'error',\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new winstonFileRotator({\n                  filename: 'logs/application-%DATE%.log',\n                  datePattern: 'YYYY-MM-DD',\n                  zippedArchive: true,\n                  maxSize: '20m',\n                  maxFiles: '14d',\n                }),\n              ],\n            };\n      },\n    }),\n    AuthModule,\n    UsersModule,\n    CaslModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logging service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startingMessage\n                        \n                    \n                \n            \n            \n                \nstartingMessage()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns a welcome message.\n\n\n                    \n                    \n                    \n                        Returns :     IMessage\n\n                    \n                    \n                        welcome message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { IMessage } from '@starter/api-types';\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {Logger} logger logging service\n   */\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Returns a welcome message.\n   * @returns {string} welcome message\n   */\n  startingMessage(): IMessage {\n    this.logger.info('Calling welcomeMessage -> ', AppService.name);\n\n    return {\n      message: 'Welcome to api! Navigate to api/v1/docs for documentation.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/auth\n            \n\n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n                    Login route to validate and create tokens for users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { Public } from './public.decorator';\n\n/**\n * Authentication Controller\n */\n@ApiTags('authentication')\n@Controller('v1/auth')\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} usersService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * Login route to validate and create tokens for users\n   * @param {LoginDto} payload the login dto\n   */\n  @Public()\n  @Post('login')\n  @ApiResponse({ status: 201, description: 'Login Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async login(@Body() payload: LoginDto): Promise {\n    const user = await this.authService.validateUser(payload);\n    return this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterDto} payload the registration dto\n   */\n  @Public()\n  @Post('register')\n  @ApiResponse({ status: 201, description: 'Registration Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async register(@Body() payload: RegisterDto) {\n    const user = await this.usersService.create(payload);\n    return this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserRoles } from '../users/user-role.entity';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    TypeOrmModule.forFeature([User, UserRoles]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n          signOptions: {\n            ...(configService.get('WEBTOKEN_EXPIRATION_TIME')\n              ? {\n                  expiresIn: Number(\n                    configService.get('WEBTOKEN_EXPIRATION_TIME'),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, JwtStrategy, UsersService],\n  exports: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                users service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on User payload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        token body\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n                    Validates whether or not the user exists in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        registered user\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                        \n                    \n\n            \n                \n                    Time in seconds when the token is to expire\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as moment from 'moment';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { LoginDto } from './dto/login.dto';\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {number}\n   */\n  private readonly expiration: number;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {UsersService} usersService users service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n  ) {\n    this.expiration = this.configService.get('WEBTOKEN_EXPIRATION_TIME');\n  }\n\n  /**\n   * Creates a signed jwt token based on User payload\n   * @param {User} param dto to generate token from\n   * @returns {Promise} token body\n   */\n  async createToken({\n    id,\n    username,\n    name,\n    roles,\n    email,\n  }: User): Promise {\n    return {\n      expiration: this.expiration,\n      expirationFormatted: moment()\n        .add(this.expiration, 'seconds')\n        .format('LLL'),\n      token: this.jwtService.sign({\n        id,\n        username,\n        name,\n        roles,\n        email,\n      }),\n    };\n  }\n\n  /**\n   * Validates whether or not the user exists in the database\n   * @param {LoginDto} param login payload to authenticate with\n   * @returns {Promise} registered user\n   */\n  async validateUser({ username, password }: LoginDto): Promise {\n    const user = await this.usersService.getByUsernameAndPass(\n      username,\n      password,\n    );\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Could not authenticate. Please try again',\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslFactory.html":{"url":"injectables/CaslFactory.html","title":"injectable - CaslFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/casl.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/casl.factory.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n  InferSubjects,\n} from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\n\nimport { UserActionsEnum, UserRolesEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\n\n// Creating CASL subjects to manage. Remark: all is a special keyword in CASL that represents \"any subject\".\ntype Subjects = InferSubjects | 'all';\n\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class CaslFactory {\n  createForUser(user: User) {\n    // Remark: the user is coming from the req.user.\n    const { can, build } = new AbilityBuilder\n    >(Ability as AbilityClass);\n\n    if (user.roles.some(({ role }) => role === UserRolesEnum.SUDO)) {\n      can(UserActionsEnum.Manage, 'all'); // read-write access to everything\n    } else {\n      can(UserActionsEnum.Read, 'all'); // read-only access to everything\n    }\n\n    can(UserActionsEnum.Update, User, { username: user.username }); // update own user\n\n    return build({\n      // Read https://casl.js.org/v5/en/guide/subject-type-detection#use-classes-as-subject-types for details\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslFactory \n\nCaslFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CaslFactory } from './casl.factory';\n\n@Module({\n  providers: [CaslFactory],\n  exports: [CaslFactory],\n})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserPolicyHandler.html":{"url":"classes/DeleteUserPolicyHandler.html","title":"class - DeleteUserPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                JWT Authentication Guard\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { IS_PUBLIC_KEY } from './public.decorator';\n\n/**\n * JWT Authentication Guard\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a object to be signed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} usersService\n   */\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly usersService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {Record} jwtPayload validation method for jwt token\n   * @returns {Promise>} a object to be signed\n   */\n  async validate({ iat, exp, id }: Record): Promise {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/login.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Login Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:26\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:16\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from 'class-validator';\n\n/**\n * Login Dto Class\n */\nexport class LoginDto {\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/password.transformer.ts\n        \n\n\n            \n                Description\n            \n            \n                Password Transformer Class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n            \n                \nfrom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/password.transformer.ts:20\n                \n            \n\n\n            \n                \n                    Grabs the string to hash from\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        from string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n            \n                \nto(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/password.transformer.ts:12\n                \n            \n\n\n            \n                \n                    Value to transform to\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string to hash\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { ValueTransformer } from 'typeorm';\n\n/**\n * Password Transformer Class\n */\nexport class PasswordTransformer implements ValueTransformer {\n  /**\n   * Value to transform to\n   * @param {string} value string to hash\n   */\n  to(value: string) {\n    return crypto.createHmac('sha256', value).digest('hex');\n  }\n\n  /**\n   * Grabs the string to hash from\n   * @param {string} value from string\n   */\n  from(value: string) {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/dto/patch-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Patch User Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:20\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:38\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:46\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:30\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Patch User Payload Class\n */\nexport class PatchUserDto {\n  /**\n   * Email field\n   */\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty()\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/casl/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, CaslFactory: CaslFactory)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/casl/policies.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CaslFactory\n                                                  \n                                                        \n                                                                        CaslFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { AppAbility, CaslFactory } from './casl.factory';\nimport { CHECK_POLICIES_KEY } from './check-policies.decorator';\nimport { PolicyHandler } from './policy-handlers';\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(private reflector: Reflector, private CaslFactory: CaslFactory) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const { user } = context.switchToHttp().getRequest();\n    const ability = this.CaslFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === 'function') {\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/register.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Register Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:22\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:42\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:52\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:32\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Register Dto Class\n */\nexport class RegisterDto {\n  /**\n   * Email field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User Entity Class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gravatar\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:36\n                        \n                    \n\n            \n                \n                    Email column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gravatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:42\n                        \n                    \n\n            \n                \n                    Gravatar column (gravatar url)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:18\n                        \n                    \n\n            \n                \n                    UUID column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:30\n                        \n                    \n\n            \n                \n                    Name column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'password', length: 255, transformer: undefined, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:60\n                        \n                    \n\n            \n                \n                    Column that employs the PasswordTransformer to hash passwords before writing to database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRoles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:48\n                        \n                    \n\n            \n                \n                    Column to represent a one to many relationship with the roles entity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:24\n                        \n                    \n\n            \n                \n                    Username column\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { PasswordTransformer } from './password.transformer';\nimport { UserRoles } from './user-role.entity';\n\n/**\n * User Entity Class\n */\n@Entity({\n  name: 'users',\n})\nexport class User {\n  /**\n   * UUID column\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * Username column\n   */\n  @Column({ unique: true })\n  username: string;\n\n  /**\n   * Name column\n   */\n  @Column()\n  name: string;\n\n  /**\n   * Email column\n   */\n  @Column()\n  email: string;\n\n  /**\n   * Gravatar column (gravatar url)\n   */\n  @Column()\n  gravatar: string;\n\n  /**\n   * Column to represent a one to many relationship with the roles entity\n   */\n  @OneToMany(() => UserRoles, (role) => role.user)\n  roles: UserRoles[];\n\n  /**\n   * Column that employs the PasswordTransformer to hash passwords before writing to database\n   */\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n    select: false,\n  })\n  @Exclude()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoles.html":{"url":"entities/UserRoles.html","title":"entity - UserRoles","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User Roles Entity Class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:16\n                        \n                    \n\n            \n                \n                    UUID column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRolesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRolesEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:27\n                        \n                    \n\n            \n                \n                    Column for role based access\nBeware this default app role will permit every created profile to delete other profiles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.roles, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:35\n                        \n                    \n\n            \n                \n                    Column to represent a many to one relationship with the profile entity\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { UserRolesEnum } from '@starter/api-types';\n\nimport { User } from './user.entity';\n\n/**\n * User Roles Entity Class\n */\n@Entity()\nexport class UserRoles {\n  /**\n   * UUID column\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * Column for role based access\n   * Beware this default app role will permit every created profile to delete other profiles\n   */\n  @Column({\n    type: 'enum',\n    enum: UserRolesEnum,\n    default: UserRolesEnum.SUDO,\n  })\n  role: UserRolesEnum;\n\n  /**\n   * Column to represent a many to one relationship with the profile entity\n   */\n  @ManyToOne(() => User, (user) => user.roles, {\n    onDelete: 'CASCADE',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/users\n            \n\n\n            \n                Description\n            \n            \n                Users Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUserByUsername\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                getUserByUsername\n                            \n                            \n                                    Async\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')@UseGuards(PoliciesGuard)@CheckPolicies(new DeleteUserPolicyHandler())@ApiResponse({status: 200, description: 'Delete User Request Received'})@ApiResponse({status: 400, description: 'Delete User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:85\n                \n            \n\n\n            \n                \n                    Removes a user from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the user has been deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n                    Retrieves current authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@ApiResponse({status: 200, description: 'Fetch User Request Received'})@ApiResponse({status: 400, description: 'Fetch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves a particular user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user given username to fetch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchUser(payload: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiResponse({status: 200, description: 'Patch User Request Received'})@ApiResponse({status: 400, description: 'Patch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:71\n                \n            \n\n\n            \n                \n                    Edit a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IGenericMessageBody } from '@starter/api-types';\n\nimport { CheckPolicies } from '../casl/check-policies.decorator';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { DeleteUserPolicyHandler } from '../casl/policy-handlers';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { User } from './user.entity';\nimport { UsersService } from './users.service';\n\n/**\n * Users Controller\n */\n@ApiBearerAuth()\n@ApiTags('users')\n@Controller('v1/users')\nexport class UsersController {\n  /**\n   * Constructor\n   * @param usersService\n   */\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Retrieves current authenticated user\n   * @returns {Promise} queried user data\n   */\n  @Get('user')\n  getUser(@Request() req) {\n    return req.user;\n  }\n\n  /**\n   * Retrieves a particular user\n   * @param username the user given username to fetch\n   * @returns {Promise} queried user data\n   */\n  @Get(':username')\n  @ApiResponse({ status: 200, description: 'Fetch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Fetch User Request Failed' })\n  async getUserByUsername(@Param('username') username: string): Promise {\n    const user = await this.usersService.getByUsername(username);\n    if (!user) {\n      throw new BadRequestException(\n        'The user with that username could not be found.',\n      );\n    }\n    return user;\n  }\n\n  /**\n   * Edit a user\n   * @param {RegisterPayload} payload\n   * @returns {Promise} mutated user data\n   */\n  @Patch()\n  @ApiResponse({ status: 200, description: 'Patch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Patch User Request Failed' })\n  async patchUser(@Body() payload: PatchUserDto): Promise {\n    return this.usersService.edit(payload);\n  }\n\n  /**\n   * Removes a user from the database\n   * @param {string} username the username to remove\n   * @returns {Promise} whether or not the user has been deleted\n   */\n  @Delete(':username')\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(new DeleteUserPolicyHandler())\n  @ApiResponse({ status: 200, description: 'Delete User Request Received' })\n  @ApiResponse({ status: 400, description: 'Delete User Request Failed' })\n  async deleteUserByUsername(\n    @Param('username') username: string,\n  ): Promise {\n    return this.usersService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCaslFactory\n\nCaslFactory\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { CaslFactory } from '../casl/casl.factory';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { UserRoles } from './user-role.entity';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, UserRoles])],\n  providers: [\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    PoliciesGuard,\n    CaslFactory,\n  ],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Users Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userRolesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/users/users.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRolesRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:76\n                \n            \n\n\n            \n                \n                    Create a user with RegisterPayload fields\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from the created user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:131\n                \n            \n\n\n            \n                \n                    Delete user given a username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the delete operation was completed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(payload: PatchUserDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:108\n                \n            \n\n\n            \n                \n                    Edit user data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n                    Fetches user from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsername\n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n                    Fetches user from database by username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsernameAndPass\n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:59\n                \n            \n\n\n            \n                \n                    Fetches user by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotAcceptableException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as crypto from 'crypto';\nimport { url } from 'gravatar';\nimport { Repository } from 'typeorm';\n\nimport { IGenericMessageBody } from '@starter/api-types';\n\nimport { RegisterDto } from '../auth/dto/register.dto';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { UserRoles } from './user-role.entity';\nimport { User } from './user.entity';\n\n/**\n * Users Service\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * Constructor\n   * @param {Repository} userRepository\n   * @param {Repository} rolesRepository\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(UserRoles)\n    private readonly userRolesRepository: Repository,\n  ) {}\n\n  /**\n   * Fetches user from database by UUID\n   * @param {number} id\n   * @returns {Promise} data from queried user\n   */\n  get(id: number): Promise {\n    return this.userRepository.findOne({ where: { id }, relations: ['roles'] });\n  }\n\n  /**\n   * Fetches user from database by username\n   * @param {string} username\n   * @returns {Promise} data from queried user\n   */\n  getByUsername(username: string): Promise {\n    return this.userRepository.findOneBy({ username });\n  }\n\n  /**\n   * Fetches user by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   * @returns {Promise} data from queried user\n   */\n  getByUsernameAndPass(username: string, password: string): Promise {\n    return this.userRepository\n      .createQueryBuilder('users')\n      .where('users.username = :username and users.password = :password')\n      .setParameter('username', username)\n      .setParameter(\n        'password',\n        crypto.createHmac('sha256', password).digest('hex'),\n      )\n      .getOne();\n  }\n\n  /**\n   * Create a user with RegisterPayload fields\n   * @param {RegisterDto} payload user payload\n   * @returns {Promise} data from the created user\n   */\n  async create(payload: RegisterDto): Promise {\n    const user = await this.getByUsername(payload.username);\n\n    if (user) {\n      throw new NotAcceptableException(\n        'The account with the provided username currently exists. Please choose another one.',\n      );\n    }\n\n    // Remark: Default role is set to sudo\n    const roles: UserRoles[] = [new UserRoles()];\n    await this.userRolesRepository.save(roles);\n\n    return this.userRepository.save(\n      this.userRepository.create({\n        ...payload,\n        roles,\n        gravatar: url(payload.email, {\n          protocol: 'http',\n          s: '200',\n          r: 'pg',\n          d: '404',\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Edit user data\n   * @param {PatchUserDto} payload\n   * @returns {Promise} mutated user data\n   */\n  async edit(payload: PatchUserDto): Promise {\n    const { username } = payload;\n    const user = await this.getByUsername(username);\n    if (user) {\n      Object.keys(payload).forEach((key) => {\n        if (key === 'password') {\n          key = crypto.createHmac('sha256', key).digest('hex');\n        }\n        user[key] = payload[key];\n      });\n      return this.userRepository.save(user);\n    } else {\n      throw new BadRequestException(\n        'The user with that username does not exist in the system. Please try another username.',\n      );\n    }\n  }\n\n  /**\n   * Delete user given a username\n   * @param {string} username\n   * @returns {Promise} whether or not the delete operation was completed\n   */\n  async delete(username: string): Promise {\n    const deleted = await this.userRepository.delete({ username });\n    if (deleted.affected === 1) {\n      return { message: `Deleted ${username} from records` };\n    } else {\n      throw new BadRequestException(\n        `Failed to delete a user by the name of ${username}.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app.controller.test.ts\n            \n            variable\n            moduleMocker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.test.ts\n            \n            variable\n            moduleMocker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            userRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/casl.factory.ts\n            \n            injectable\n            CaslFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policies.guard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            class\n            DeleteUserPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/dto/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/users/user-role.entity.ts\n            \n            entity\n            UserRoles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.1.1\n        \n            @angular/cdk : ^14.2.0\n        \n            @angular/common : ~14.1.1\n        \n            @angular/compiler : ~14.1.1\n        \n            @angular/core : ~14.1.1\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ~14.1.1\n        \n            @angular/material : ^14.2.0\n        \n            @angular/platform-browser : ~14.1.1\n        \n            @angular/platform-browser-dynamic : ~14.1.1\n        \n            @angular/router : ~14.1.1\n        \n            @casl/ability : ^6.0.0\n        \n            @fastify/helmet : ^9.1.0\n        \n            @fastify/rate-limit : ^7.3.0\n        \n            @fastify/static : ^6.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.0.11\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @nrwl/angular : 14.5.10\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            gravatar : ^1.8.2\n        \n            joi : ^17.6.0\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^2.3.3\n        \n            nest-winston : ^1.7.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeorm : ^0.3.7\n        \n            winston : ^3.8.1\n        \n            winston-daily-rotate-file : ^4.7.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI Starter\n\n\n  \n\n\nA progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n\n\n    \n    \n    \n    \n    \n\n\nTable of Contents:\nDescription |\nPrerequisites |\nDeployment |\nEnvironment Configuration |\nChoosing a Web Framework |\nChoosing a Database |\nTesting |\nTypeDocs |\nLogs\n🔎 This repo was created with Nx.\n📚 Description\nThis boilerplate is made to quickly prototype backend applications. It comes with authentication/authorization, logging, crud features and database persistence out of the box.\n\n🛠️ Prerequisites\nNon Docker\n\nPlease make sure to have Node.js (16+) locally by downloading the Javascript runtime via brew, choco, or apt-get.\n\nPlease make sure to have MYSQL locally by deploying a web server stack like XAMPP. The control panel can then trigger MYSQL to start on localhost. MYSQL can be downloaded standalone via brew, choco, or apt-get.\n\n\nDocker 🐳\n\nPlease make sure to have Docker Desktop operational to quickly compose the required dependencies. Then follow the docker procedure outlined below.\n\n\n🚀 Deployment\nManual Deployment without Docker\n\nClone the repo via git clone https://github.com/msanvarov/nest-rest-typeorm-boilerplate.\n\nDownload dependencies via npm i or yarn.\n\nCreate a .env file via the cp .env.example .env command and replace the existing environment variable placeholders with valid responses.\n\nStart the api in development mode by using npm run start (the app will be exposed on http://localhost:3333; not to conflict with React, Angular, or Vue ports).\n\n\n\nOptional deployment of the UI\n\n\n\nThis repo comes with a UI built with Angular - that can be accessed via http://localhost:4200.\n\nTo start the UI, start a new terminal window and run npm run start --project ui.\n\n\n\nRemark: In the docker deployment, the UI is automatically started and served by the API.\n\n\n\n\nDeploying with Docker 🐳\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container in detached mode with the required configuration\n$ docker-compose up -d\nThe following command will download dependencies and execute the web application on http://localhost:80 (deployed behind a Nginx reverse proxy).\n\n\n🔒 Environment Configuration\nBy default, the application comes with a config module that can read in every environment variable from the .env file.\nAPP_ENV - the application environment to execute as, either in development or production. Determines the type of logging options to utilize. Options: development or production.\nWEBTOKEN_ENCRYPTION_KEY - the key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this.\nWEBTOKEN_EXPIRATION_TIME - the time in seconds when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_TYPE - the type of database connection to use.\nDB_USERNAME - username for authenticating against the database.\nDB_PASSWORD - password for authenticating against the database, can be left empty if a password is not needed (not safe).\nDB_HOST - the endpoint where this database sits (default is localhost but can be set explicitly).\nDB_PORT - default ports for different types of database connections.\nDB_DATABASE - the actual database name to perform operations on.\n\n🏗 Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But the Express adapter is still accessible on a different branch.\n\n💾 Choosing a Database\nBy default MYSQL/MariaDB are the database of choice but TypeORM supports other database types like SQLite, Postgres, MongoDB, and MSSQL. To use anything other than MYSQL/MariaDB, change the configuration in the .env file, and download the corresponding wrapper library, like SQLite3.\n\nCheck https://typeorm.io/ for supported database types.\n\nRemark: For MongoDB, TypeORM is not as feature-rich as Mongoose. Therefore I created another boilerplate for Nest and Mongoose.\n\n🦾 HTTP/2\nLuckily, Fastify can enable HTTP2 over either HTTPS (h2) or plaintext (h2c) out of the box. This boilerplate makes use of this on the feat/http2 branch where a self-signed certificate was created for testing this capability. The certificate is located in the certs folder. For production, please use a valid certificate.\nThe self signed certificate can be generated via OpenSSL:\n$ openssl req -x509 -newkey rsa:4096 -keyout api-key.pem -out api-cert.pem -days 365 -nodes\n\nRemark: Express can be ran with HTTP/2 by employing the spdy library.\n\n\n✅ Testing\nDocker 🐳\n# Start the docker container if it's not running\n$ docker start nest-rest-typeorm-api\n\n# unit tests\n$ docker exec -it nest-rest-typeorm-api npm run test\nNon-Docker\n# execute test\n$ npm run test\n💡 TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, by typing npm run typedocs:api:start. This will produce a docs/api folder with the required front-end files and start hosting on localhost.\n\nRemark: The docs for the ui are generated on-demand, by typing npm run typedocs:ui:start. This will produce a docs/ui folder with the required front-end files and start hosting on localhost.\n\n# generate docs for api code\n$ npm run typedocs:api:start\n📝 Open API\nOut of the box, the web app comes with Swagger; an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n🔊 Logs\nThis boilerplate comes with a Winston module for extensive logging, the configurations for Winston can be found in the app module.\n\n🏗️ Progress\n\n\n\nBranches\nStatus\n\n\n\n\nmain\n✅\n\n\nfeat/*\n🚧\n\n\n\n Remark: This template was employed to create a [Real World example app](https://github.com/gothinkster/realworld) on [Github](). -->\n\n\n👥 Support\nPRs are appreciated, I fully rely on the passion ❤️ of the OS developers.\n\nLicense\nThis starter API is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslFactory \n\nCaslFactory \n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            License : MIT\n        \n            Author : Sal Anvarov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (apps/.../casl.factory.ts)\n                        \n                        \n                            PolicyHandler   (apps/.../policy-handlers.ts)\n                        \n                        \n                            PolicyHandlerCallback   (apps/.../policy-handlers.ts)\n                        \n                        \n                            Subjects   (apps/.../casl.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/casl.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects<> | \"all\"\n\n                \n            \n        \n    \n    apps/api/src/casl/policy-handlers.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            CheckPolicies   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (apps/.../public.decorator.ts)\n                        \n                        \n                            moduleMocker   (apps/.../app.controller.test.ts)\n                        \n                        \n                            moduleMocker   (apps/.../auth.controller.test.ts)\n                        \n                        \n                            OPEN_API_CURRENT_VERSION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_DESCRIPTION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_NAME   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_ROOT   (apps/.../main.ts)\n                        \n                        \n                            Public   (apps/.../public.decorator.ts)\n                        \n                        \n                            user   (apps/.../auth.service.test.ts)\n                        \n                        \n                            userRole   (apps/.../auth.service.test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/check-policies.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_policy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app.controller.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        moduleMocker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ModuleMocker(global)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/auth.controller.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        moduleMocker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ModuleMocker(global)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPEN_API_CURRENT_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n\n            \n                \n                    Current version of the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API Description'\n                    \n                \n\n            \n                \n                    A short description for api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API'\n                    \n                \n\n            \n                \n                    The name given to the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/v1/docs'\n                    \n                \n\n            \n                \n                    The endpoint for open api ui\n\n                \n            \n\n        \n    \n\n    apps/api/src/auth/auth.service.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(User, {\n  id: 1,\n  email: 'test@user.com',\n  roles: [\n    {\n      id: 1,\n      role: UserRolesEnum.SUDO,\n      user: 1,\n    },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoles\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(UserRoles, {\n  id: 1,\n  role: UserRolesEnum.SUDO,\n  user,\n} as UserRoles)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
